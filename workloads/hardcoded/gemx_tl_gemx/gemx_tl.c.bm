#include <stdlib.h> 
#include <stdio.h> 
#include "mmio.h"
#define ACCEL_CONTROL 0x20000
#define AP_DONE_MASK 0b10

#define ACCEL_INT 0x20004
#define ACCEL_A 0x20010
#define ACCEL_B 0x20018

#define MAX_FILE_SIZE 663554

#include "in_buffer.c"

int gemx_accel(char* a, char* b){
    // Disable interrupt for now
    reg_write32(ACCEL_INT, 0x0);

    // Set up pointer a and pointer b address
    reg_write32(ACCEL_A, (uint32_t)a);
    reg_write32(ACCEL_B, (uint32_t)b);

    // Write to ap_start to start the execution 
    reg_write32(ACCEL_CONTROL, 0x1);
    //printf("Accel Control: %x\n", reg_read32(ACCEL_CONTROL));

    // Done?
    int done = 0;
    while (!done){
        done = reg_read32(ACCEL_CONTROL) & AP_DONE_MASK;
    }
    return 0;
}




int main (){

	//char in_buffer[MAX_FILE_SIZE];
	char out_buffer[MAX_FILE_SIZE];
  
//  printf("char in_buffer[MAX_FILE_SIZE] = {");
//  //for (int i=0; i < MAX_FILE_SIZE; i ++){
//  for (int i=0; i <1; i ++){
//    if ( i != 0)
//      printf(" ,");
//    printf("%d", in_buffer[i]);
//  }
//
//  printf("};\n");
  //printf("%x\n", in_buffer);

  gemx_accel(in_buffer, out_buffer);

  printf("char out_buffer[MAX_FILE_SIZE] = {");
  for (int i=0; i < MAX_FILE_SIZE; i ++){
    if ( i != 0)
      printf(" ,");
    printf("%d", out_buffer[i]);
  }
  printf("};\n");
  //writefile(out_path, out_buffer);
  //printf("%s\n", in_buffer);
	//free(buffer);
	return 0;
}
