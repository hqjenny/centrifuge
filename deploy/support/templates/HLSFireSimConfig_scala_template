package firesim.firesim

import chisel3._
import freechips.rocketchip._
import freechips.rocketchip.tile._
import freechips.rocketchip.rocket._
import freechips.rocketchip.subsystem._
import freechips.rocketchip.diplomacy._
import freechips.rocketchip.config.{Parameters, Config}
import freechips.rocketchip.tilelink._
import freechips.rocketchip.devices.tilelink._
import freechips.rocketchip.devices.debug.HasPeripheryDebugModuleImp
import freechips.rocketchip.config.Parameters
import freechips.rocketchip.util.{HeterogeneousBag}
import freechips.rocketchip.amba.axi4.AXI4Bundle
import freechips.rocketchip.config.{Field, Parameters}
import freechips.rocketchip.diplomacy.LazyModule
import utilities.{Subsystem, SubsystemModuleImp}
import icenet._
import firesim.util.DefaultFireSimHarness
import testchipip._
import testchipip.SerialAdapter.SERIAL_IF_WIDTH
import tracegen.{HasTraceGenTiles, HasTraceGenTilesModuleImp}
import sifive.blocks.devices.uart._
import java.io.File

import firesim.bridges._
import firesim.util.{WithNumNodes}
import firesim.configs._

import FireSimValName._

${HLS_SOC_IMPORT}

class WithHLSRoCCExample extends Config((site, here, up) => {
    case BuildRoCC => Seq(
        ${ROCC_CONFIG}
        (p: Parameters) => {
            val translator = LazyModule(new TranslatorExample(OpcodeSet.custom3)(p))
            translator 
        }
    )
})

class ${SOC_NAME}HLSFireSimRocketChipConfig extends Config(
    new WithBootROM ++
    new WithPeripheryBusFrequency(BigInt(3200000000L)) ++
    new WithExtMemSize(0x400000000L) ++ // 16GB
    new WithoutTLMonitors ++
    new WithUARTKey ++
    new WithNICKey ++
    new WithBlockDevice ++
    new WithRocketL2TLBs(1024) ++
    new WithPerfCounters ++
    new WithInclusiveCache ++
    new WithoutClockGating ++
    new WithDefaultMemModel ++
    new WithDefaultFireSimBridges ++
    new WithHLSRoCCExample ++
    new freechips.rocketchip.system.DefaultConfig)

class ${SOC_NAME}FireSimTopWithHLSDUT(implicit p: Parameters) extends FireSimDUT ${TL_PERIPHERY}
{
    override lazy val module = new ${SOC_NAME}FireSimTopWithHLSModuleImp(this)
}

class ${SOC_NAME}FireSimTopWithHLSModuleImp[+L <: ${SOC_NAME}FireSimTopWithHLSDUT](l: L) extends FireSimModuleImp(l) ${TL_PERIPHERY_IMP}

class ${SOC_NAME}FireSimTopWithHLS (implicit p: Parameters) extends DefaultFireSimHarness(() => new ${SOC_NAME}FireSimTopWithHLSDUT)

class ${SOC_NAME}FireSimTopWithHLSNoNICDUT(implicit p: Parameters) extends FireSimNoNICDUT ${TL_PERIPHERY}
{
    override lazy val module = new ${SOC_NAME}FireSimTopWithHLSNoNICModuleImp(this)
}

class ${SOC_NAME}FireSimTopWithHLSNoNICModuleImp[+L <: ${SOC_NAME}FireSimTopWithHLSNoNICDUT](l: L) extends FireSimNoNICModuleImp(l) ${TL_PERIPHERY_IMP}

class ${SOC_NAME}FireSimTopWithHLSNoNIC (implicit p: Parameters) extends DefaultFireSimHarness(() => new ${SOC_NAME}FireSimTopWithHLSNoNICDUT)
